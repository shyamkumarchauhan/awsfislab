name: AWS FIS Chaos Test

on:
  workflow_dispatch: # Manual trigger

env:
  AWS_REGION: us-east-1
  AWS_ACCOUNT_ID: 206694716999
  ECR_REPOSITORY: fis-demo-app
  ECS_CLUSTER: fis-demo-cluster
  ECS_SERVICE: fis-demo-service
  TASK_DEFINITION_FAMILY: fis-demo-task

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.ap-south-1.amazonaws.com

      - name: Build and Push Docker Image
        run: |
          docker build -t $ECR_REPOSITORY .
          docker tag $ECR_REPOSITORY:latest $AWS_ACCOUNT_ID.dkr.ecr.ap-south-1.amazonaws.com/$ECR_REPOSITORY:latest
          docker push $AWS_ACCOUNT_ID.dkr.ecr.ap-south-1.amazonaws.com/$ECR_REPOSITORY:latest

  deploy-ecs:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Initialize Terraform
        run: terraform init

      - name: Apply Terraform
        run: terraform apply -auto-approve

  run-fis-experiment:
    needs: deploy-ecs
    runs-on: ubuntu-latest
    steps:
      - name: Start AWS FIS Experiment
        run: |
          EXPERIMENT_ID=$(aws fis create-experiment-template --cli-input-json file://fis_experiment.json --query "experimentTemplate.id" --output text)
          aws fis start-experiment --experiment-template-id $EXPERIMENT_ID
